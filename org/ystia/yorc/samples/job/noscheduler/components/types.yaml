tosca_definitions_version: alien_dsl_2_0_0
#
# Copyright 2018 Bull S.A.S. Atos Technologies - Bull, Rue Jean Jaures, B.P.68, 78340, Les Clayes-sous-Bois, France.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#


metadata:
  template_name: org.ystia.yorc.samples.job.noscheduler.Components
  template_version: 1.0.0-SNAPSHOT
  template_author: yorc

description: |
  Basic job running a shell command without scheduler

imports:
  - tosca-normative-types:1.0.0-ALIEN20
  - alien-base-types:3.0.0
  - yorc-types:1.1.0

node_types:
  # Spawns a shell command
  org.ystia.yorc.samples.job.noscheduler.SpawnJob:
    derived_from: org.alien4cloud.nodes.Job
    properties:
      command:
        type: string
        required: true
    requirements:
      - host:
          capability: tosca.capabilities.Container
          node: tosca.nodes.Compute
          relationship: tosca.relationships.HostedOn
          occurrences: [1, 1]
    attributes:
      commandSpawned: { get_operation_output: [SELF, tosca.interfaces.node.lifecycle.Runnable, submit, COMMAND_SPAWNED] }
      commandStdout: { get_operation_output: [SELF, tosca.interfaces.node.lifecycle.Runnable, run, COMMAND_STDOUT] }
      commandStderr: { get_operation_output: [SELF, tosca.interfaces.node.lifecycle.Runnable, run, COMMAND_STDERR] }
    interfaces:
      tosca.interfaces.node.lifecycle.Runnable:
        inputs:
          COMMAND_TO_SPAWN: { get_property: [SELF, command]}
        submit: scripts/operations/submit.sh
        run: scripts/operations/run.sh
        cancel: scripts/operations/cancel.sh

  # Job displaying results of a previous SpawnJob execution
  org.ystia.yorc.samples.job.noscheduler.DisplayResJob:
    derived_from: org.alien4cloud.nodes.Job
    requirements:
      - spawnedJob:
          capability: tosca.capabilities.Node
          node: org.ystia.yorc.samples.job.noscheduler.SpawnJob
          relationship: org.ystia.yorc.samples.relationships.noscheduler.DisplayResult
          occurrences: [1, UNBOUNDED]
      - host:
          capability: tosca.capabilities.Container
          node: tosca.nodes.Compute
          relationship: tosca.relationships.HostedOn
          occurrences: [1, 1]
    attributes:
      results: { get_operation_output: [SELF, tosca.interfaces.node.lifecycle.Runnable, run, COMMAND_STDOUT] }
    interfaces:
      tosca.interfaces.node.lifecycle.Runnable:
        submit:
          inputs:
            STDOUT_RESULT: { get_attribute: [REQ_TARGET, spawnedJob, commandStdout] }
          implementation: scripts/operations/submit_display_results.sh
        run: scripts/operations/run.sh
        cancel: scripts/operations/cancel.sh
    artifacts:
      - display_results_script:
          file: scripts/artifacts/display_results.sh
          type: tosca.artifacts.File
relationship_types:
  org.ystia.yorc.samples.relationships.noscheduler.DisplayResult:
    derived_from: tosca.relationships.DependsOn
    interfaces:
      Configure:
        target_changed:
          inputs:
            DISPLAY_COMMAND_SPAWNED: {get_attribute: [TARGET, commandSpawned]}
            DISPLAY_COMMAND_STDOUT: {get_attribute: [TARGET, commandStdout]}
            DISPLAY_COMMAND_STDERR: {get_attribute: [TARGET, commandStderr]}
          implementation: scripts/operations/on_target_change.sh
